--- # ASE Gitlab CI configuration

variables:
  OMP_NUM_THREADS: "1"

stages:
  - test
  - paperwork
  - deploy

# Test a non-standard port (default is 3306) to prevent bugs like
# https://gitlab.com/ase/ase/-/merge_requests/2789 from reoccuring
# UPDATE: MYSQL_TCP_PORT does not work at all with gitlab-runner.
# No matter what the variable is set to, it errors out.
# Thus (temporarily?) disabled as of April 2023.
.database-configuration:
  variables:
    POSTGRES_DB: testase
    POSTGRES_USER: ase
    POSTGRES_PASSWORD: "ase"
    MYSQL_DATABASE: testase_mysql
    MYSQL_ROOT_PASSWORD: ase
    # MYSQL_TCP_PORT: 3306

  services:
    - postgres:latest
    - mysql:latest
    - mariadb:latest

# Check oldest supported Python with oldest supported libraries.
# Does not install any optional libraries except matplotlib.
#
# With older python, pytest-xdist jumbles the tests differently
# on different codes, then complains.  So we use -j 0.
oldlibs:
  image: registry.gitlab.com/ase/ase:ase-oldlibs
  extends: .database-configuration
  script:
    - pip install --no-deps .
    - >
      ase test -j0 --pytest --color=yes
      -W "ignore:can't resolve package"
      -W ignore::PendingDeprecationWarning

# For testing newest versions of libraries against standard images
# on dockerhub.
#
# psycopg2-binary is for testing the postgres backend for ase.db
# Currently we have trouble with pyhon3.8 where we need to compile some
# libraries that don't have binary wheels; we don't want to install gcc
# in this test job.
pipinstall:
  image: python:3.8
  extends: .database-configuration
  script:
    - python --version
    - pip install psycopg2-binary pymysql cryptography
    - pip install .[test]
    - ase test --pytest --color=yes
  when: manual

# This is the main test job using new versions of libraries.
# The intention is to enable as many features and libraries as possible.
#
# We execute it inside the project dir with --editable in order for
# the coverage script to correctly resolve the OMIT paths (a bit hacky).
# It would be better to install it for real, and for things to just work.
main:
  image: registry.gitlab.com/ase/ase:ase-main
  extends: .database-configuration
  # Inheriting variables from the database-configuration job
  # seems to be broken all of a sudden (gitlab-runner 13.0.1 and 13.3.1)
  # We need to redefine them here then, otherwise gitlab-runner will fail
  # those tests when run locally.  Meanwhile everything works on gitlab.com.
  # Strange!
  variables:
    POSTGRES_DB: testase
    POSTGRES_USER: ase
    POSTGRES_PASSWORD: "ase"
    MYSQL_DATABASE: testase_mysql
    MYSQL_ROOT_PASSWORD: ase
    # MYSQL_TCP_PORT: 3306

  services:
    - postgres:latest
    - mysql:latest
    - mariadb:latest

  # We ignore a DeprecationWarning about --rsyncdir from pytest-xdist.
  # This seems to be internal between pytest libs.
  script:
    - python --version
    - pip install --no-deps --editable .
    - ase info --calculators
    - cd $CI_PROJECT_DIR
    - >
      ase test
      --calculators asap,ff,lj,morse,tip3p,tip4p
      --coverage --pytest --color=yes --durations 20 -v -r s
      --junit-xml=report.xml
      -W "ignore:The --rsyncdir command line argument"
      -W "ignore:NumPy will stop allowing conversion of out-of-bound Python integers"
    - coverage xml --data-file ase/test/.coverage
    - mv ase/test/coverage-html coverage-main
    - mv ase/test/.coverage coverage-main/coverage.dat
  artifacts:
    paths:
      - coverage-main/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: ase/test/report.xml
    expire_in: 1 week

# Calculator integration tests which always run.
# Encompasses those tests marked as @pytest.mark.calculator_lite.
# Please make sure these tests are cheap.
calculators-lite:
  image: registry.gitlab.com/ase/ase:ase-full-monty
  script:
    - pip install --no-deps --editable .
    - export ASE_CONFIG_PATH=/home/ase/aseconfig.ini
    - >
      ase test calculator --calculators=auto --coverage
      --pytest -m calculator_lite --color=yes --durations=20 -v
      --junit-xml=report.xml -r s
      -W "ignore:The --rsyncdir command line argument"
    - coverage xml --data-file ase/test/.coverage
    - mv ase/test/coverage-html coverage-calculators-lite
    - mv ase/test/.coverage coverage-calculators-lite/coverage.dat
  artifacts:
    paths:
      - coverage-calculators-lite/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: ase/test/report.xml
    expire_in: 1 week

# Plan: Test as many calculators as possible as well as possible.
# Obviously this is kind of expensive so the job is manually activated.
# Also, the docker serves as a knowledgebase for how to set up those
# calculators with ASE.
#
# It would be great if someone could enable more calculators with this.
calculators:
  image: registry.gitlab.com/ase/ase:ase-full-monty
  script:
    - pip install --no-deps --editable .
    - export ASE_CONFIG_PATH=/home/ase/aseconfig.ini
    - ase info --calculators
    - >
      ase test calculator --calculators abinit,asap,cp2k,dftb,espresso,gpaw,kim,lammpslib,lammpsrun,mopac,nwchem,octopus,siesta
      --coverage --pytest --color=yes --durations 20 --junit-xml=report.xml
      -W "ignore:The --rsyncdir command line argument"
    - coverage xml --data-file ase/test/.coverage
    - mv ase/test/coverage-html coverage-calculators
    - mv ase/test/.coverage coverage-calculators/coverage.dat
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule"
  artifacts:
    paths:
      - coverage-calculators/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: ase/test/report.xml
    expire_in: 1 week

doc:
  image: registry.gitlab.com/ase/ase:ase-main
  script:
    - pip install --no-deps .[docs]
    - ase info
    - which sphinx-build
    - cd $CI_PROJECT_DIR/doc
    - python -m ase.utils.sphinx run # test scripts
    - sphinx-build -W . build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/doc/build/
    expire_in: 1 week

distribution-package:
  image: registry.gitlab.com/ase/ase:ase-main
  extends: .database-configuration
  script:
    - mkdir dist
    - python setup.py sdist | tee dist/setup_sdist.log
    - python setup.py bdist_wheel | tee dist/setup_bdist_wheel.log
    - pip install dist/ase-*.tar.gz
    - ase test --pytest --color=yes
    - pip uninstall --yes ase
    - pip install dist/ase-*-py3-none-any.whl
    - ase test --pytest --color=yes
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  when: manual

# Publish code coverage data on web.
#  * The deploy stage is specially recognized by gitlab
#  * The jobname pages is specially recognized by gitlab
#  * The public/ directory is specially recognized by gitlab
# https://about.gitlab.com/blog/2016/11/03/publish-code-coverage-report-with-gitlab-pages/
pages:
  stage: deploy
  dependencies:
    - coverage-combine
  script:
    - mv coverage-html public
  artifacts:
    paths:
      - public
    expire_in: 2 weeks
  only:
    - master

lint:
  image: registry.gitlab.com/ase/ase:ase-paperwork
  script:
    - cd $CI_PROJECT_DIR
    - mypy --version
    - mypy --color-output -p ase
    - python -We:invalid -m compileall -f -q ase/
    - flake8 .

coverage-combine:
  image: registry.gitlab.com/ase/ase:ase-paperwork
  stage: paperwork
  dependencies:
    - main
    - calculators-lite
  script:
    - cd ase/test # Next to .coveragerc and friends
    - coverage combine ../../coverage-main/coverage.dat ../../coverage-calculators-lite/coverage.dat
    - coverage report
    - coverage html
    - cd ../..
    - mv ase/test/coverage-html .
  coverage: '/TOTAL.+ ([0-9]+\.[0-9]+%)/'
  artifacts:
    paths:
      - coverage-html
    expire_in: 1 week

.shared_windows_runners:
  tags:
    - shared-windows
    - windows
    - windows-1809

windows_test:
  extends:
    - .shared_windows_runners
  stage: test
  before_script:
    # https://stackoverflow.com/questions/61791108/gitlab-ci-shared-windows-runner-for-python
    # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/13
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install python --version=3.8 -y -f
    - refreshenv
  script:
    - python --version
    - python -m pip install --upgrade pip
    - python -m pip install pytest pytest-mock
    - python -m pip install .
    - >
      ase test
      --calculators eam,ff,lj,morse,tip3p,tip4p
      --pytest --color=yes --durations 20
      -W "ignore:The --rsyncdir command line argument"
      -W "ignore:NumPy will stop allowing conversion of out-of-bound Python integers"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule"
